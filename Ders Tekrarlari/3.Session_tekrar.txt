-- Donanimda osi model ön planda

-- yazilimda TCP- IP model ön planda 

-- Physical layer in tek amaci; yukaridan gelen veriyi eger kalbolo ag ise
-- elektrik sinyallerine cevirmek, kablosuz ise 
-- wifi sinyallerine cevirmek ve veriyi iletmek 

-- LAN da mac adresleri

-- WAN da IP adresleri (yani aga baglanan her cihazin 1 mac bir de IP adresi olmasi gerekir) 





-- 1. ve 2. katmanin standartlari Ethernet dökümani ile belrlenmistir

-- 2. katmandaki en önemli cihaz ethernet kartidir 

-- Ethernet karti diger adi network interface card 

-- eger bir yerde interface kelimesi görüyorsak, 
-- burada bir ethernet karti yani mac adresi var demektir 






-- 3. katmandaki en önemli cihaz router

-- su an IP version 4 kullanilir 32 bittir






-- 4: transport layer: burada kernel devreye girer

-- agdan gelen verileri ilgili olduklari app lere dagitir 

-- tüm veriler ayni kablo üzerinden gelir. verinin hangi app e ait 
-- olduguna kernel karar verir.

-- Protokollerin en cok kkulanildigi katmandir




-- transport layer :   Segment'e dönüsür 

-- Network layer:      packet' a dönüsür 

-- datalink layer:     veri frame'e dönüstürülür

-- physical layer:      Bits 





--- Repeater: hub a benzer.  gelen sinyali güclendirerek iletir

-- ethernet kablosu max mesafe 100 metre demistik. eger 200 metreye veri gönderecek isek
-- 100 metre de bir repeater kullanmak gerekir 

-- sinyal güclendirici olarak calisir
-- buraya gelen sinyal güclendirilip bir sonraki ethernet kablosuna aktarilir

-- physical layer da calisir 

-- tüm kablolar icin kullanilir 

-- kitalar arasi dösenen fiber optik kablolar dahil

-- sadece elektirik sinyali degil, isik demetlerini güclendiren cihazlar da 
-- repeater olarak adlandirilir

-- hub larda ayni zamanda bir repeater dir. kendisine geln sinyali güclendirip 
-- gönderir









####################   TCP - IP 

-- Transmission Control Protocol / Internet protocol 

-- Bilgisayarlar arasinda iletisimi saglayan bir network protokolüdür 

-- ilk olarak 1974 de ortaya cikmistir

-- 1978 de ise TCP ve IP olmak üzere ikiye bölündü 

-- 1983 de arpanet de data transferi icn resmi anlamini kazandi 



--- Arpanet, usa savunma bakanligi icerisinde veri göndermek icin kullaniliyordu. 
-- zamanlar arpanet üni lere ve halka da acildi. ancak arpanet icrisinde mac adresleri ile 
-- iletisim saglandigindan bu durum iletisim de büyük bir hantalliga sebep oldu. 
-- ip adresine ihtiyac duyuldu.

-- TCP IP olmadan hicbir pc internete baglanamaz.
-- her isletim sistemi icerisinde, Protocol Suite dedigimiz
-- bir yazilim bir framework bulunur 

--- BÜyük bir wan düsünelim. Bunun icerisinde 4 tane lan olsun.

-- isimleri de lan1 lan2 lan3 ve lan4

-- lan1 den lan4 e bir veri gönderilmek istendi. 

-- Tüm lanlar birbirine router lar vasitasi ile baglidir. yani lan1 deki kisi lan4 ün ip adresini bilmeden
-- buraya veri gönderemez. 

-- router lar ip adresleri ile calisir. Bir lan dan aldigi veriyi diger lan a iletir. ama sadece alici lan a ulastirir.
-- bu lan icerisinde hangi pc nin veriyi alacagi konusu ile ilgilenmez.
-- hangi pc konusu ile lan icerisinde bulunna switch ler ilgilenir.

-- lan icerisindeki pc lerin host id leri ve mac adresleri vardir. gelen paketler bu adresler vasitasi ile 
-- alici pc ye iletilir

-- switch lan lar arasindaki iletisimde kullanilan ip adreslerini okuyamaz.
-- mac adres okur 

-- wan icerisindeki her bir lan in NET ID si vardir. 

-- IP adresleri ise iki kisimdan olusur.
-- birinci kisim net id 
-- ikinci kisim ise lan icerisinde bulunan host id dir 







#### TCP/IP (DoD) and osi model

-- The Dod (department od defense)  created TCP IP to ensure and preserve
-- data integrity

-- dod model yani tcp ip model osi modelin aynisi ancak sikistirilmis halidir

-- tcp ip 4 katmandan olusur 

--- 4. katman:   osi deki application,   presentation ve session katmanlarinin birlesimi 

-- kullanici ile iletisim 
-- datanin encryption 'i 
-- translation 'i 
-- comprehension'i 
-- session start ve bitisleri hepsi bu katmanda yapilir

-- burasi app lerin birbiri ile iletisim kurdugu katman 

-- piyasada binlerce protocol vardir. bu protocol leri birbirinden port numaralari ile ayirt ediyoruz

-- her bir protocol ün kendine has port numarasi vardir 





-- 3. katman:   transport layer osi ile ayni 

-- bu katmanda kullanilan ana protocoller TCP ve UDP  dir 

-- protocol dedigimiz iletisim dilidir. mesela email server ile iletisim 
-- kurabilmek icin onun dilinden konusmamiz lazim. bu da protocol dür 



-- 2. katman:   osi deki network layer dir. buradaki adi ise internet layer dir 
-- internetin calismasini saglayan katman 

-- yukaridan gelen veriyi paket e cevirir

-- burada router lar devrededir. ilgili paketi alip adrese teslim ederler

-- bu katmanda kullanilan yegane protocol ip dir 


-- 1. katman:  buradaki ismi network interface dir. osi deki data link layer ile
--              physical layer in birlesimidir 


-- mac adresleri , ethernet kablolari ve ethernet protokü buradadir

-- evimizde kullandigimiz wifi de bir ethernet standardidir. Bu nedenle bu da bu katmanin bir parcasidir 

-- Bu katmanda kullanilan yegane protokol ethernet dir 







### IP (internet protocol)

--- network ler arasinda iletisim icin kullilmak zorundadir 

-- alici host'u bulabilmek icin, gönderici 2 seye sahip olmak zorundadir:
(yani bir node bir cihaz ile irtibata gecebilmek icin)

-- 1: alici hangi network üzerindedir? ( Software adress)
-- ip adresin diger isimleri:
    software adress 
    logical address

-- 2:  alicinin  id si nedir? (mac address)
--- mac address de fiziksel adres olarak gecer 

--- ip, paketin destination adresine bakar. daha sonra routing table i kullanarak
-- paketin nereye gönderilecegine karar verir. ve en iyi yolu secer 

-- yani bu iki adrese de sahipsek aga dahil olup diger cihazlar ile haberlesebiliriz 








######## ICMP (Internet Control message protocol)

-- bu bir yönetim protokolü ve ip icin mesajlasma servis saglayicisidir

-- belirli kontrol paketleri göndererek karsi taraf online mi offline mi 
--- yogun mu degil mi bu konuda geri bildirim aliriz

-- mesela ping komutu ile bir server in ayakta olup olmadigini test ediyoruz 
-- karsi taraf da bize yanit göndererek durumunu bildirir

-- mesela google.com a baglanmaya calisiyoruz. ama baglanma olmuyor server cökmüs. 
-- iste bu durumda, server dan hemen önceki router bir icmp paket üretir ve bu server a 
-- ulasilamadigini bildirir 

-- kisaca, icmp network e bagli cihazlarin durumunu sorgulamaya ve raporlamaya yarayan 
-- bir protokol 

-- ping ve traceroute komutlari icmp protokol kullanir 







#### Address Resolution Protocol: (ARP)

-- pc lerde raouter lar da bir arp tablosu vardir 

-- bu tablo, agdaki ip adresleri ile mac adreslerinin kayitlarini tutar

-- eger agdaki cihazlarin mac adresini biliyor ancak ip adreslerini bilmiyorsak,

-- bu durumda arp broadcast dedigimiz bir broadcast  mesaji göndeririz ve cihazlarin addres lerini isteriz 

-- arp -a komutu ile lokal agimizdaki tüm cihazlarin ip ve mac adreslerini görebiliirz 

-- arp tablosu, tüm layer 2 cihazlarda tutulan ve agdaki cihazlarin mac adresler ile ip adreslerini 
-- eslestiren bir tablodur

-- aga sürekli cihaz giris cikislari oldugu icin dinamik bir tablodur 






#### reverse ARP (RARP):

-- burada da kendimize ait mac adresini biliyoruz ancak ip adresimizi bilmiyoruz. Bu durumda mesaj yayinlariz
-- ve bizim ip adresimizi bilen bir server bize dönüs yapar 








## TCP IP ye ait  Transport Layer:

-- hangi protokolü kullanirsak kullanalim, internette üst katmanlardaki tüm veriler, 
-- tcp yada udp protokol kullanilarak gönderilir 

-- bu iki protokol transport layer daki iki temel protokoldür 

-- TCP:  transmission control protocol 

-- UDP :  user datagram protocol 

-- calisma yöntemleri tamamen farklidir 





## TCP:  

-- full dublex dir 

-- connection oriented dir 

-- yani öncelikle gönderici aliciya bir mesaj gönderir. (benim bir mesajim var der )

-- alici "ben hazirim der"

-- gönderen "gönderiyorum der" ve mesajlari gönderir 

-- iste bu isleme treeway habdshake deniyor 

-- treeway handshake den dolayi tcp, bir connected oriented protocol dür 

-- yani karsilikli anlasmadan veri gönderilmez tcp de 

-- göndericinin her paketinden sonra, alici bir acknowledge gönderir 

-- gönderici, alicidan her paketten sonra geri dönüs almadan yeni paketi göndermez 

-- böylece, gönderici paketin gönderildiginden ve paketlerin sira ile gittiginden emin olur 

-- iletisimin ilk asamasindan cevap alinmadigi sürece veri gönderilmez 

-- bu nedenlerle tcp de reliable bir iletisim vardir güvenilir 

-- mesela alici son aldigim paket bozuk derse gönderici bir daha gönderir 

-- eger alici alindi mesaji göndermezse bir süre beklnir mesaj tekrar gönderilir 

-- tüm bu süreclerden dolayi tcp yavastir

-- ve tcp de segment in basina konulan header dosyasi daha büyüktür 

-- bu da paket boyutunu büyütür 

-- zoom gibi youtube gibi yüksek  veri hizi gerektiren ortamlarda tcp protokol yavas kalir.
-- eger kullanilirsa buralarda ses ve videolar kesik kesik gelir 

-- iste bu sebeplerden dolayi bir de udp protocol ortaya cikmistir 






### UDP :   (user datagram protocol)

-- burada segmentlerin basindaki header tcp nin ücte biridir 

-- burada alici bir talepte bulunur. daha sonra gönderici mesajlari göndermeye baslar.

-- alici mesajlari almis mi almamis mi, sira ile almis mi bunlar önemli degildir 

-- bu nedenle reliable güvenilir degildir 

-- tcp de wan icerisinde alici ile gönderici arasinda bir tünel olusturulur ve tüm veriler 
-- bu tünel icerisinden gönderilir 

-- udp de ise wan icerisindeki tüm yollar tüm ihtimaller kullanilir.

-- hiz ise udp kullanilir 

-- güvenlik, , siralama, garanti önemli önemli ise tcp 




######  TCP:                        UDP:

-- secure                       unsecure
-- connection-oriented          connectionless
-- slow                         fast
-- guaranted transmission       no guarentee
-- flow control                 no flow control 
-- reliable                     unreliable
-- virtual circuit              no virtual circuit 
-- acknowledge                  no acknowledge
-- 20 bytes header              8 bytes header 

-- 